
{{> breadcrumbs}}
{{>heading heading=show.title}}

<div class="mt-6">
  {{> errormsg }}
</div>


{{> show-overview }}
{{#if show.points}}
<div class="card mt-6 mb-6">
  <header class="card-header">
    <p class="card-header-title">
      <span class="icon"><i class="fas fa-map-marker-alt"></i></span><span>Placemarks</span>
    </p>
  </header>
  <div class="card-content">
    <div id="map" style="height: 500px"></div>
    {{> list-points }}
  </div>
  <!-- Points Table -->

</div>
{{else}}
<!-- No Points Message -->
{{> message title="No Placemarks" message="You can create a Placemark by filling out the Placemark form below."}}

{{/if}}

<div class="card mt-6">
  <header class="card-header">
    <p class="card-header-title">
      <span class="icon"><i class="fas fa-cog"></i></span><span>Configuration Panel</span>
    </p>
  </header>
  <div class="card-content">
    <div class="columns is-multiline">
      <div class="column is-5">
        {{> show-form formTitle="Edit Movie" formIcon="pencil" postUrl=showPostUrl btnTitle="Edit Movie"}}
        <br>
        {{> image-upload-form heading="Set Show Image"}}
        <br>
        <a href="/show/{{show._id}}/delete">
          <button class="button is-danger is-pulled-right">
            <span class="icon"><i class="fas fa-trash"></i></span><span>Delete Show</span>
          </button>
        </a>
        {{#if show.points}}
        <button onclick="deleteAllPoints()" class="button is-danger is-pulled-right mr-3">
          <span class="icon"><i class="fas fa-fire"></i></span><span>Delete All Placemarks</span>
        </button>
        {{/if}}
      </div>
      <div class="column is-1"></div>
      <div class="column is-6">
        {{> point-form formTitle="Add Placemark" formIcon="plus" postUrl=pointPostUrl btnTitle="Add Placemark"}}
      </div>
      <div class="column is-1"></div>
    </div>
  </div>
</div>

  <script>
    const show = {{{ showJSON }}}
    const points = show.points;
    let latLngs = [];

    function deleteAllPoints() {
      const proceed = confirm(
        "This will delete ALL Points for this Show. Are you sure you wish to proceed?");
      // if user clicks confirm direct to delete all points endpoint
      if (proceed) {
        location.href = location.href += "/deleteallpoints";
      }
    }

    const zoomLevel = points.length > 1 ? 7 : 13
    // set up points map
    const map = L.map("map", {
      dragging: true,
      doubleClickZoom: false,
      zoomControl: true,
      scrollWheelZoom: true
    }).setView([points[0].latitude, points[0].longitude], zoomLevel);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution: "Â© OpenStreetMap"
    }).addTo(map);

    points.forEach((point) => {
      latLngs.push(L.latLng(point.latitude, point.longitude));
      let marker = L.marker([point.latitude, point.longitude]).addTo(map);
      const markerUrl = `/show/${show._id}/point/${point._id}`
      marker.bindPopup(
        "<b>" + point.name + "</b><br/><a href='" + markerUrl + "'>View</a>");
    })

    if (points.length > 1) {
      map.fitBounds(latLngs);
    };

  </script>